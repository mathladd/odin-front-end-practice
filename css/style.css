body {
    background-color: #000;
    color: #FFF;
    font-size: 21px;
    /* Inheritance: certain CSS properties when applied to an element are inherited by that element’s descendants. Typography based properties (color, font-size, font-family, etc.) are usually inherited, while most other properties aren’t. Inherited properties will be overrode by child's properties REGARDLESS of specificity 
        => some properties in "body" will be inherited by its childs- which will be most elements (unless those properties are changed afterwards in the child's CSS, since those changes will trump the changes in "body" EVEN IF "body" has more specificity)
    */
}

p {
    margin-top: 0px;
    color: #000;
    line-height: 1.4;       /* don't use px so that when you change font size, the spacing changes along with it */
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;       /* https://www.cssfontstack.com/ . Just pick a font and this website will pick some other fonts similar to your pick */
}

div {
    margin-top: 0px;
    background-color: blue;
}

/* the CSS box model */
/*
    Margin: empty space around my element outside the border
    Border: a border / stroke / around my element
    Padding: empty space WITH background around my element (within the border)

    All of these ADD on top of the width and height!
*/
.a-few-words {
    background-color: wheat;
    padding: 50px 100px 50px 25px; /*top right bottom left*/

    /* margin: 0px 100px 20px 100px; */
    margin: 20px auto;          /* this means 20px top and bottom, and auto resizing left and right, ensuring the element stays in the middle of its container no matter how it and the browser are resized */

    /* width: 300px; */
    width: 30%;                 /* this ensures the box will always be 30% the size of this element's container (which is the div named "container", whose width itself depends on "body"'s width, which depends on current browser size) */
    max-width: 1000px;          /* this sets a limit to how much width ".a-few-words" can expand when auto-resizing */

    /* border: 5px solid green;  */
    border-width: 5px;
    border-style: solid;
    border-color: green;

}


/* applying to an id. An id can only be applied to 1 ELEMENT. Use id sparingly (if at all even. Classes is enough for the majority of cases) */
#exclamation {
    color: #00FF;
}

/*chain-select all elements with the class "exclamation-marks" and the id "exclamation"*/
.exclamation-marks#exclamation {
    color: red;
}

/*---------everything below here is formatting the second div--------*/
.stuff {
    background-color: blanchedalmond;
    text-align: center;
    padding: 20px 30px 20px 30px;
}

/*select all elements with the "gibberish-paragraph" class inside an ancestor element having the class "stuff." 
*note: ".stuff .gibberish-paragraph" =/= ".stuff.gibberish-paragraph" 
    -> the former selects all CHILD elements with class "gibberish-paragraph" inside an ANCESTOR element with class "stuff" (a descendant combinator)
    -> the latter selects all elements HAVING BOTH class "stuff" and "gibberish-paragraph" (a chaining selector)
*/
.stuff .gibberish-paragraph {
    color: purple;
}

/* select only the "p"s inside the element with class "stuff." this will not override the above due to the css score system:
    elements and pseudo elements:               1 point
    classes, attributes and pseudo-classes:     10 points
    ids:                                        100 points
    inline (in html) styling:                   1000 points

    =>  A: .stuff .gibberish-paragraph  = 10 + 10 = 20
        B: .stuff p                     = 10 + 1  = 11

    A > B => A is prioritized even though B comes later in the css code
*/
.stuff p {
    color: yellow;
}

/* applying to the <span> wrapping around the text "on and on and on" */
.important {
    font-weight: bold;
    font-style: italic;
    text-transform: uppercase;
}

/* applying to the link to page 2 REMEMBER TO PUT THE PSEUDO CLASS e.g. a:link IN THE FOLLOWING EXACT ORDER */
a {
    color: maroon;
    text-decoration: none;   /* this gets rid of the underline under links */
}

a:link {
    color: mediumvioletred;
}

a:visited {     /* this is when you have already visited a link */
    color: rosybrown;
}

a:hover {       /* this is when you hover on a link */
    color: red;
    font-style: italic;
}

a:active {      /* this is when you click on the link */
    color: purple;
    font-size: 30px;
}

a:focus {       /* this is for when some people may use Tab to navigate the website */
    color: yellow;
}

.links {
    font-weight: bold;
}

#link-to-page-2 {
    font-size: 25px;
}

/* texts will wrap around the image instead. See more about float in class .box's css definition below */
img {
    float: left;
    margin-right: 20px;
}


/*-------------everything below will be for formatting lists---------------*/
ol {
    background-color: black;
    list-style-type: upper-alpha;  /* A, B, C bullets instead of 1, 2, 3 */
}

ul {
    width: 200px;
    padding: 20px 20px 20px 20px;
    list-style-type: circle;
    list-style-image: url(../img/icon.png);
    color: black;
    background-color: white;
    list-style-position: inside;   /* inside so bullets can be centered along with text when doing text-align. outside means the bullets stay out along the wrapper element ul's border */
}

ul li {
    background-color: palevioletred;
    margin: 5px;
    text-align: center;
}



/*-------------everything below will work with boxes, colors, and float ------*/

/* float: when a box/image/element floats, all elements go below it except texts (e.g. a div may go below the element but not the div's text). if all elements float, they line up on a same row (since floating items cannot go above or below each other anymore). When an element has "clear: both", it will create a new row that forces all floating items specified after that element to float below that row */
.box-wrapper {
    background-image: url(../img/hamster.jpg);
    background-size: cover;
    height: 500px;
    width: 500px;
}
.box {
    height: 100px;
    width: 100px;
    float: left;
}
.box1 {
    background-color: white;
}
.box2 {
    background-color: red;
}
.box3 {
    background-color: firebrick;
}
.box4 {
    background-color: orange;
}
.box5 {
    background-color: yellow;
    clear: both;            /* this creates a new row that forces floating items below to steer clear of this element. They will line up below this element instead */
}

.box6 {
    background-color: lime;
}
.box7 {
    background-color: green;
}
.box8 {
    background-color: rgba(0, 0, 255, 0.4);    /*this is blue with 40% opaqueness (or 60% transparency) */
}
.box9 {
    background-color: purple;
    opacity: 0.4;                   /* CAUTION: this will make not just the background but also the text 40% opaque (or 60% transparency) as well */
}